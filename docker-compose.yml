version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - service-network
    command: sh -c "npm run build && npm start"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    # environment:
    #   DB_CONNECTION: pgsql
    #   DB_HOST: db
    #   DB_PORT: 5432
    #   DB_DATABASE: sample
    #   DB_USERNAME: admin
    #   DB_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://backend || exit 1"]      
      interval: 30s
      timeout: 10s
      retries: 5  
    networks:
      - service-network
    command: sh -c "php artisan migrate && apache2-foreground"

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -h $DB_CONTAINER_NAME -p $POSTGRES_PORT -U $POSTGRES_USER"]
      interval: 5s
      timeout: 10s
      retries: 5  
    networks:
      - service-network

  pgadmin:
    image: dpage/pgadmin4:8.13
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - service-network

volumes:
  pgdata:

networks:
  service-network:
    driver: bridge
